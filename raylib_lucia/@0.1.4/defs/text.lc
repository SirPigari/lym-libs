private final measure_text_c: &int = libload.get_fn(lib, "MeasureText", ["str", "int"], "int")
private final draw_text_c: &int = libload.get_fn(lib, "DrawText", ["str", "int", "int", "int", "ptr"], "void")
private final draw_fps_c: &int = libload.get_fn(lib, "DrawFPS", ["int", "int"], "void")

public final fun measure_text(text: str, font_size: int) -> int:
    /// Measures the width of the given text string in pixels for the specified font size.
    ///     @param text: str - The text to measure.
    ///     @param font_size: int - The font size to use for measurement.
    ///     @return: int - The width of the text in pixels.
    if (measure_text_c == null):
        throw "Function 'measure_text' not found in the loaded library." from "FunctionNotFoundError"
    end
    _text: &int = libload.create_str_ptr(text)
    if (_text == null):
        throw "Invalid pointer: null" from "PointerError"
    end
    result: int = libload.call_fn(measure_text_c, [_text, font_size])
    return result
end

public final fun draw_text(
    text: str,
    pos_x: int,
    pos_y: int,
    font_size: int,
    color: tuple[int; 4],
) -> void:
    /// Draws text on the screen at the specified position, size, and color.
    ///     @param text: str - The text to draw.
    ///     @param pos_x: int - The x position to draw the text.
    ///     @param pos_y: int - The y position to draw the text.
    ///     @param font_size: int - The font size of the text.
    ///     @param color: tuple[int; 4] - A tuple of 4 integers representing RGBA color (0-255).
    ///     @return: void - No return value.
    if (draw_text_c == null):
        throw "Function 'draw_text' not found in the loaded library." from "FunctionNotFoundError"
    end
    if (len(color) != 4):
        throw "Color must be a tuple of 4 integers (RGBA)." from "ValueError"
    end
    for (c in color):
        if (c < 0 || c > 255):
            throw "Color values must be in the range 0-255." from "ValueError"
        end
    end
    _text: &int = libload.create_str_ptr(text)
    if (_text == null):
        throw "Invalid pointer: null" from "PointerError"
    end
    _color := libload.create_struct([color[0], color[1], color[2], color[3]], ["byte", "byte", "byte", "byte"])
    if (_color == null):
        throw "Invalid pointer: null" from "PointerError"
    end
    libload.call_fn(draw_text_c, [_text, pos_x, pos_y, font_size, _color])
    return null
end

public final fun draw_fps(pos_x: int, pos_y: int) -> void:
    /// Draws the current FPS (frames per second) on the screen at the specified position.
    ///     @param pos_x: int - The x position to draw the FPS.
    ///     @param pos_y: int - The y position to draw the FPS.
    ///     @return: void - No return value.
    if (draw_fps_c == null):
        throw "Function 'draw_fps' not found in the loaded library." from "FunctionNotFoundError"
    end
    libload.call_fn(draw_fps_c, [pos_x, pos_y])
    return null
end

public final MeasureText: &int = measure_text
public final DrawText: &int = draw_text
public final DrawFPS: &int = draw_fps
